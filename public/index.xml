<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>HAI NGOC VO</title>
    <link>https://haingocvo.netlify.app/</link>
    <description>Recent content on HAI NGOC VO</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 19 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://haingocvo.netlify.app/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Visualizing population growth rate</title>
      <link>https://haingocvo.netlify.app/2022/04/19/visualizing-population-growth-rate/</link>
      <pubDate>Tue, 19 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://haingocvo.netlify.app/2022/04/19/visualizing-population-growth-rate/</guid>
      <description>Get the data Data came from Vietnam general statistic organization To be able to easily get the data from R. I build a simple package gsovn to scrape data from their website.
library(tidyverse) ## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ── ## ✓ ggplot2 3.3.5 ✓ purrr 0.3.4 ## ✓ tibble 3.1.6 ✓ dplyr 1.0.8 ## ✓ tidyr 1.2.0 ✓ stringr 1.4.0 ## ✓ readr 2.1.2 ✓ forcats 0.5.1 ## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() data = gsovn::gso_read(gsovn::avail_dataset$link[30]) clean df = data$data df = df %&amp;gt;% rename(region =1) %&amp;gt;%  mutate(region= str_squish(region)) region = c(  &amp;#34;WHOLE COUNTRY&amp;#34;,  &amp;#34;Northern midlands and mountain areas&amp;#34;,  &amp;#34;Red River Delta&amp;#34;,  &amp;#34;Northern Central area and Central coastal area&amp;#34;,  &amp;#34;Central Highlands&amp;#34;,  &amp;#34;South East&amp;#34;,  &amp;#34;Mekong River Delta&amp;#34; )   region_regex = paste0(&amp;#34;(&amp;#34;,str_c(region, collapse = &amp;#34;|&amp;#34;),&amp;#34;)&amp;#34;)  df = df %&amp;gt;%  mutate(across(-region, as.</description>
    </item>
    
    <item>
      <title>Schedule optimize app by R shiny</title>
      <link>https://haingocvo.netlify.app/2021/09/26/schedule-optimize-app-by-r-shiny/</link>
      <pubDate>Sun, 26 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://haingocvo.netlify.app/2021/09/26/schedule-optimize-app-by-r-shiny/</guid>
      <description>Customizable web app to optimize schedule working shifts</description>
    </item>
    
    <item>
      <title>An R package to retrieve Vietnam stock data</title>
      <link>https://haingocvo.netlify.app/2021/08/06/an-r-package-to-retrieve-vietnam-stock-data/</link>
      <pubDate>Fri, 06 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://haingocvo.netlify.app/2021/08/06/an-r-package-to-retrieve-vietnam-stock-data/</guid>
      <description>Make API request to get stock data from vndirect.com.vn and cafef.vn</description>
    </item>
    
    <item>
      <title>Scrape university entrance exam score</title>
      <link>https://haingocvo.netlify.app/2021/08/06/scrape-university-entrance-exam-score/</link>
      <pubDate>Fri, 06 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://haingocvo.netlify.app/2021/08/06/scrape-university-entrance-exam-score/</guid>
      <description>Using {rvest} and {furrr} to scrape exam score in parallel</description>
    </item>
    
    <item>
      <title>Vietnam statistic dashboard with R</title>
      <link>https://haingocvo.netlify.app/2021/08/06/vietnam-statistic-dashboard-with-r/</link>
      <pubDate>Fri, 06 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://haingocvo.netlify.app/2021/08/06/vietnam-statistic-dashboard-with-r/</guid>
      <description>Cleanning, visualizing Vietnamese statistic data</description>
    </item>
    
  </channel>
</rss>
